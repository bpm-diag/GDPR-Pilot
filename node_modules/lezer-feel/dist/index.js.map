{"version":3,"file":"index.js","sources":["../src/parser.terms.js","../src/tokens.js","../src/highlight.js","../src/parser.js"],"sourcesContent":["// This file was generated by lezer-generator. You probably shouldn't edit it.\nexport const\n  propertyIdentifier = 121,\n  identifier = 122,\n  nameIdentifier = 123,\n  insertSemi = 124,\n  LineComment = 1,\n  BlockComment = 2,\n  Expression = 3,\n  expression0 = 128,\n  ForExpression = 4,\n  forExpressionStart = 131,\n  _for = 5,\n  ForInExpressions = 6,\n  ForInExpression = 7,\n  Name = 8,\n  Identifier = 9,\n  AdditionalIdentifier = 10,\n  minus = 11,\n  plus = 12,\n  divide = 13,\n  multi = 14,\n  exp = 15,\n  inExpressionSep = 136,\n  _in = 16,\n  IterationContext = 17,\n  forExpressionBodyStart = 139,\n  _return = 18,\n  IfExpression = 19,\n  ifExpressionStart = 140,\n  _if = 20,\n  then = 21,\n  _else = 22,\n  QuantifiedExpression = 23,\n  quantifiedExpressionStart = 141,\n  some = 24,\n  every = 25,\n  QuantifiedInExpressions = 26,\n  QuantifiedInExpression = 27,\n  satisfies = 28,\n  Disjunction = 29,\n  or = 30,\n  Conjunction = 31,\n  and = 32,\n  Comparison = 33,\n  between = 36,\n  PositiveUnaryTest = 37,\n  PositiveUnaryTests = 39,\n  ArithmeticExpression = 41,\n  arithmeticPlusStart = 145,\n  arithmeticTimesStart = 146,\n  arithmeticExpStart = 147,\n  arithmeticUnaryStart = 148,\n  InstanceOfExpression = 42,\n  instance = 43,\n  of = 44,\n  Type = 45,\n  QualifiedName = 46,\n  VariableName = 47,\n  BacktickIdentifier = 48,\n  SpecialType = 49,\n  days = 50,\n  time = 51,\n  duration = 52,\n  years = 53,\n  months = 54,\n  date = 55,\n  list = 58,\n  context = 61,\n  ContextEntryTypes = 62,\n  ContextEntryType = 63,\n  _function = 65,\n  ArgumentTypes = 66,\n  ArgumentType = 67,\n  PathExpression = 68,\n  pathExpressionStart = 154,\n  FilterExpression = 70,\n  filterExpressionStart = 155,\n  FunctionInvocation = 72,\n  functionInvocationStart = 156,\n  SpecialFunctionName = 73,\n  functionInvocationParameters = 157,\n  NamedParameters = 74,\n  NamedParameter = 75,\n  ParameterName = 76,\n  PositionalParameters = 77,\n  literal = 160,\n  nil = 161,\n  _null = 78,\n  NumericLiteral = 79,\n  StringLiteral = 80,\n  BooleanLiteral = 81,\n  DateTimeLiteral = 82,\n  DateTimeConstructor = 83,\n  AtLiteral = 84,\n  SimplePositiveUnaryTest = 86,\n  Interval = 87,\n  listStart = 167,\n  ParenthesizedExpression = 88,\n  List = 89,\n  FunctionDefinition = 90,\n  functionDefinitionStart = 169,\n  FormalParameters = 91,\n  FormalParameter = 92,\n  external = 93,\n  Context = 97,\n  contextStart = 171,\n  ContextEntry = 98,\n  Key = 99,\n  PropertyName = 100,\n  PropertyIdentifier = 101,\n  Expressions = 102,\n  UnaryTests = 103,\n  not = 105,\n  Dialect_camunda = 0\n","/* global console,process */\n\nimport { has, reduce } from 'min-dash';\n\nimport {\n  insertSemi,\n  Identifier,\n  functionDefinitionStart,\n  FunctionDefinition,\n  contextStart,\n  Context,\n  forExpressionStart,\n  forExpressionBodyStart,\n  ForExpression,\n  quantifiedExpressionStart,\n  QuantifiedExpression,\n  ContextEntry,\n  Name,\n  ForInExpression,\n  identifier,\n  VariableName,\n  expression0,\n  QuantifiedInExpression,\n  PositiveUnaryTest,\n  nameIdentifier,\n  propertyIdentifier,\n  PropertyIdentifier,\n  PropertyName,\n  StringLiteral,\n  BooleanLiteral,\n  NumericLiteral,\n  List,\n  listStart,\n  pathExpressionStart,\n  PathExpression,\n  ParameterName,\n  IfExpression,\n  ifExpressionStart,\n  filterExpressionStart,\n  FilterExpression,\n  ArithmeticExpression,\n  arithmeticPlusStart,\n  arithmeticTimesStart,\n  arithmeticExpStart,\n  arithmeticUnaryStart,\n  nil,\n  AdditionalIdentifier,\n  FunctionInvocation,\n  functionInvocationStart\n} from './parser.terms.js';\n\nimport {\n  ContextTracker,\n  ExternalTokenizer\n} from '@lezer/lr';\n\n// @ts-expect-error env access\nconst LOG_PARSE = typeof process != 'undefined' && process.env && /\\bfparse(:dbg)?\\b/.test(process.env.LOG);\n\n// @ts-expect-error env access\nconst LOG_PARSE_DEBUG = typeof process != 'undefined' && process.env && /\\bfparse:dbg\\b/.test(process.env.LOG);\n\n// @ts-expect-error env access\nconst LOG_VARS = typeof process != 'undefined' && process.env && /\\bcontext\\b/.test(process.env.LOG);\n\nconst spaceChars = [\n  9, 11, 12, 32, 133, 160,\n  5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198,\n  8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288\n];\n\nconst newlineChars = chars('\\n\\r');\n\nconst asterix = '*'.charCodeAt(0);\n\nconst additionalNameChars = chars(\"'./-+*^\");\n\n/**\n * @typedef { VariableContext | any } ContextValue\n */\n\n/**\n * @param { string } str\n * @return { number[] }\n */\nfunction chars(str) {\n  return Array.from(str).map(s => s.charCodeAt(0));\n}\n\n/**\n * @param { number } ch\n * @return { boolean }\n */\nfunction isStartChar(ch) {\n  return (\n    ch === 63 // ?\n  ) || (\n    ch >= 65 && ch <= 90 // A-Z\n  ) || (\n    ch === 95 // _\n  ) || (\n    ch >= 97 && ch <= 122 // a-z\n  ) || (\n    ch >= 0xC0 && ch <= 0xD6\n  ) || (\n    ch >= 0xD8 && ch <= 0xF6\n  ) || (\n    ch >= 0xF8 && ch <= 0x2FF\n  ) || (\n    ch >= 0x370 && ch <= 0x37D\n  ) || (\n    ch >= 0x37F && ch <= 0x1FFF\n  ) || (\n    ch >= 0x200C && ch <= 0x200D\n  ) || (\n    ch >= 0x2070 && ch <= 0x218F\n  ) || (\n    ch >= 0x2C00 && ch <= 0x2FEF\n  ) || (\n    ch >= 0x3001 && ch <= 0xD7FF\n  ) || (\n    ch >= 0xF900 && ch <= 0xFDCF\n  ) || (\n    ch >= 0xFDF0 && ch <= 0xFFFD\n  ) || (\n    ch >= 0xD800 && ch <= 0xDBFF // upper surrogate\n  ) || (\n    ch >= 0xDC00 && ch <= 0xDFFF // lower surrogate\n  );\n}\n\n/**\n * @param { number } ch\n * @return { boolean }\n */\nfunction isAdditional(ch) {\n  return additionalNameChars.includes(ch);\n}\n\n/**\n * @param { number } ch\n * @return { boolean }\n */\nfunction isPartChar(ch) {\n  return (\n    ch >= 48 && ch <= 57 // 0-9\n  ) || (\n    ch === 0xB7\n  ) || (\n    ch >= 0x0300 && ch <= 0x036F\n  ) || (\n    ch >= 0x203F && ch <= 0x2040\n  );\n}\n\n/**\n * @param { number } ch\n * @return { boolean }\n */\nfunction isSpace(ch) {\n  return spaceChars.includes(ch);\n}\n\nfunction indent(str, spaces) {\n  return spaces.concat(\n    str.split(/\\n/g).join('\\n' + spaces)\n  );\n}\n\n/**\n * @param { import('@lezer/lr').InputStream } input\n * @param  { number } [offset]\n *\n * @return { { token: string, offset: number } | null }\n */\nfunction parseAdditionalSymbol(input, offset = 0) {\n\n  const next = input.peek(offset);\n\n  if (next === asterix && input.peek(offset + 1) === asterix) {\n\n    return {\n      offset: 2,\n      token: '**'\n    };\n  }\n\n  if (isAdditional(next)) {\n    return {\n      offset: 1,\n      token: String.fromCharCode(next)\n    };\n  }\n\n  return null;\n}\n\n/**\n * @param { import('@lezer/lr').InputStream } input\n * @param { number } [offset]\n * @param { boolean } [namePart]\n *\n * @return { { token: string, offset: number } | null }\n */\nfunction parseIdentifier(input, offset = 0, namePart = false) {\n  for (let inside = false, chars = [], i = 0;; i++) {\n    const next = input.peek(offset + i);\n\n    if (isStartChar(next) || ((inside || namePart) && isPartChar(next))) {\n      if (!inside) {\n        inside = true;\n      }\n\n      chars.push(next);\n    } else {\n\n      if (chars.length) {\n        return {\n          token: String.fromCharCode(...chars),\n          offset: i\n        };\n      }\n\n      return null;\n    }\n  }\n}\n\n/**\n * @param { import('@lezer/lr').InputStream } input\n * @param  { number } offset\n *\n * @return { { token: string, offset: number } | null }\n */\nfunction parseSpaces(input, offset) {\n\n  for (let inside = false, i = 0;; i++) {\n    let next = input.peek(offset + i);\n\n    if (isSpace(next)) {\n      if (!inside) {\n        inside = true;\n      }\n    } else {\n      if (inside) {\n        return {\n          token: ' ',\n          offset: i\n        };\n      }\n\n      return null;\n    }\n  }\n}\n\n/**\n * Parse a name from the input and return the first match, if any.\n *\n * @param { import('@lezer/lr').InputStream } input\n * @param { Variables } variables\n *\n * @return { { token: string, offset: number, term: number } | null }\n */\nfunction parseName(input, variables) {\n  const contextKeys = variables.contextKeys();\n\n  const start = variables.tokens;\n\n  for (let i = 0, tokens = [], nextMatch = null;;) {\n\n    const namePart = (start.length + tokens.length) > 0;\n    const maybeSpace = tokens.length > 0;\n\n    const match = (\n      parseIdentifier(input, i, namePart) ||\n      namePart && parseAdditionalSymbol(input, i) ||\n      maybeSpace && parseSpaces(input, i)\n    );\n\n    // match is required\n    if (!match) {\n      return nextMatch;\n    }\n\n    const {\n      token,\n      offset\n    } = match;\n\n    i += offset;\n\n    if (token === ' ') {\n      continue;\n    }\n\n    tokens = [ ...tokens, token ];\n\n    const name = [ ...start, ...tokens ].join(' ');\n\n    if (contextKeys.some(el => el === name)) {\n      const token = tokens[0];\n\n      nextMatch = {\n        token,\n        offset: token.length,\n        term: nameIdentifier\n      };\n    }\n\n    if (contextKeys.some(el => el.startsWith(name))) {\n      continue;\n    }\n\n    if (dateTimeIdentifiers.some(el => el === name)) {\n      const token = tokens[0];\n\n      // parse date time identifiers as normal\n      // identifiers to allow specialization to kick in\n      //\n      // cf. https://github.com/nikku/lezer-feel/issues/8\n      nextMatch = {\n        token,\n        offset: token.length,\n        term: identifier\n      };\n    }\n\n    if (dateTimeIdentifiers.some(el => el.startsWith(name))) {\n      continue;\n    }\n\n    return nextMatch;\n  }\n\n}\n\nconst identifiersMap = {\n  [ identifier ]: 'identifier',\n  [ nameIdentifier ]: 'nameIdentifier'\n};\n\nexport const identifiers = new ExternalTokenizer((input, stack) => {\n\n  LOG_PARSE_DEBUG && console.log('%s: T <identifier | nameIdentifier>', input.pos);\n\n  const nameMatch = parseName(input, stack.context);\n\n  const start = stack.context.tokens;\n\n  const match = nameMatch || parseIdentifier(input, 0, start.length > 0);\n\n  if (match) {\n    input.advance(match.offset);\n    input.acceptToken(nameMatch ? nameMatch.term : identifier);\n\n    LOG_PARSE && console.log('%s: MATCH <%s> <%s>', input.pos, nameMatch ? identifiersMap[nameMatch.term] : 'identifier', match.token);\n  }\n}, { contextual: true });\n\n\nexport const propertyIdentifiers = new ExternalTokenizer((input, stack) => {\n\n  LOG_PARSE_DEBUG && console.log('%s: T <propertyIdentifier>', input.pos);\n\n  const start = stack.context.tokens;\n\n  const match = parseIdentifier(input, 0, start.length > 0);\n\n  if (match) {\n    input.advance(match.offset);\n    input.acceptToken(propertyIdentifier);\n\n    LOG_PARSE && console.log('%s: MATCH <propertyIdentifier> <%s>', input.pos, match.token);\n  }\n});\n\n\nexport const insertSemicolon = new ExternalTokenizer((input, stack) => {\n\n  LOG_PARSE_DEBUG && console.log('%s: T <insertSemi>', input.pos);\n\n  let offset;\n  let insert = false;\n\n  for (offset = 0;; offset++) {\n    const char = input.peek(offset);\n\n    if (spaceChars.includes(char)) {\n      continue;\n    }\n\n    if (newlineChars.includes(char)) {\n      insert = true;\n    }\n\n    break;\n  }\n\n  if (insert) {\n\n    const identifier = parseIdentifier(input, offset + 1);\n    const spaces = parseSpaces(input, offset + 1);\n\n    if (spaces || identifier && /^(then|else|return|satisfies)$/.test(identifier.token)) {\n      return;\n    }\n\n    LOG_PARSE && console.log('%s: MATCH <insertSemi>', input.pos);\n    input.acceptToken(insertSemi);\n  }\n});\n\nconst prefixedContextStarts = {\n  [ functionInvocationStart ]: 'FunctionInvocation',\n  [ filterExpressionStart ]: 'FilterExpression',\n  [ pathExpressionStart ]: 'PathExpression'\n};\n\nconst contextStarts = {\n  [ contextStart ]: 'Context',\n  [ functionDefinitionStart ]: 'FunctionDefinition',\n  [ forExpressionStart ]: 'ForExpression',\n  [ listStart ]: 'List',\n  [ ifExpressionStart ]: 'IfExpression',\n  [ quantifiedExpressionStart ]: 'QuantifiedExpression'\n};\n\nconst contextEnds = {\n  [ Context ]: 'Context',\n  [ FunctionDefinition ]: 'FunctionDefinition',\n  [ ForExpression ]: 'ForExpression',\n  [ List ]: 'List',\n  [ IfExpression ]: 'IfExpression',\n  [ QuantifiedExpression ]: 'QuantifiedExpression',\n  [ PathExpression ]: 'PathExpression',\n  [ FunctionInvocation ]: 'FunctionInvocation',\n  [ FilterExpression ]: 'FilterExpression',\n  [ ArithmeticExpression ]: 'ArithmeticExpression'\n};\n\n/**\n * A simple producer that retrievs a value from\n * a given context. Used to lazily take things.\n */\nclass ValueProducer {\n\n  /**\n   * @param { Function } fn\n   */\n  constructor(fn) {\n    this.fn = fn;\n  }\n\n  get(variables) {\n    return this.fn(variables);\n  }\n\n  /**\n   * @param { Function } fn\n   *\n   * @return { ValueProducer }\n   */\n  static of(fn) {\n    return new ValueProducer(fn);\n  }\n\n}\n\nconst dateTimeLiterals = {\n  'date and time': 1,\n  'date': 1,\n  'time': 1,\n  'duration': 1\n};\n\nconst dateTimeIdentifiers = Object.keys(dateTimeLiterals);\n\n\n/**\n * A basic key-value store to hold context values.\n */\nexport class VariableContext {\n\n  /**\n   * Creates a new context from a JavaScript object.\n   *\n   * @param {any} [value]\n   */\n  constructor(value = {}) {\n\n    /**\n     * @protected\n     */\n    this.value = value;\n  }\n\n  /**\n   * Return all defined keys of the context.\n   *\n   * @returns {Array<string>} the keys of the context\n   */\n  getKeys() {\n    return Object.keys(this.value);\n  }\n\n  /**\n   * Returns the value of the given key.\n   *\n   * If the value represents a context itself, it should be wrapped in a\n   * context class.\n   *\n   * @param {String} key\n   * @returns {VariableContext|ValueProducer|null}\n   */\n  get(key) {\n    const result = this.value[key];\n\n    const constructor = /** @type { typeof VariableContext } */ (this.constructor);\n\n    if (constructor.isAtomic(result)) {\n      return result;\n    }\n\n    return constructor.of(result);\n  }\n\n  /**\n   * Creates a new context with the given key added.\n   *\n   * @param {String} key\n   * @param {any} value\n   *\n   * @returns {VariableContext} new context with the given key added\n   */\n  set(key, value) {\n\n    const constructor = /** @type { typeof VariableContext } */ (this.constructor);\n\n    return constructor.of({\n      ...this.value,\n      [key]: value\n    });\n  }\n\n  /**\n   * Non-destructively merge another context into this one,\n   * and return the result.\n   *\n   * @param {ContextValue} other\n   *\n   * @return {VariableContext}\n   */\n  merge(other) {\n    const constructor = /** @type { typeof VariableContext } */ (this.constructor);\n\n    return new constructor(\n      constructor.__merge(this.value, other)\n    );\n  }\n\n  /**\n   * Wether the given value is atomic. Non-atomic values need to be wrapped in a\n   * context Class.\n   *\n   * @param {any} value\n   * @returns {Boolean}\n   */\n  static isAtomic(value) {\n    return !value ||\n          value instanceof this ||\n          value instanceof ValueProducer ||\n          typeof value !== 'object';\n  }\n\n  /**\n   * Takes any number of Contexts and merges them into a single context.\n   *\n   * @param { ...VariableContext } contexts\n   * @returns { VariableContext }\n   */\n  static of(...contexts) {\n    return contexts.reduce((context, otherContext) => {\n      return context.merge(otherContext);\n    }, new this({}));\n  }\n\n  /**\n   * Returns the raw representation of the given context.\n   *\n   * @param {VariableContext | any} context\n   *\n   * @return {any}\n   */\n  static __unwrap(context) {\n    if (!context) {\n      return {};\n    }\n\n    if (context instanceof this) {\n      return context.value;\n    }\n\n    if (typeof context !== 'object') {\n      return {};\n    }\n\n    return { ...context };\n  }\n\n  /**\n   * Non-destructively merges two contexts (or their values)\n   * with each other, returning the result.\n   *\n   * @param {ContextValue} context\n   * @param {ContextValue} other\n   *\n   * @return {any}\n   */\n  static __merge(context, other) {\n\n    return reduce(this.__unwrap(other), (merged, value, key) => {\n      if (value instanceof ValueProducer) {\n\n        // keep value producers in tact\n        return {\n          ...merged,\n          [key]: value\n        };\n      }\n\n      value = this.__unwrap(value);\n\n      if (has(merged, key)) {\n        value = this.__merge(this.__unwrap(merged[key]), value);\n      }\n\n      return {\n        ...merged,\n        [key]: value\n      };\n    }, this.__unwrap(context));\n  }\n\n}\n\nclass Variables {\n\n  /**\n   * @param { {\n   *   name?: string,\n   *   tokens?: string[],\n   *   children?: Variables[],\n   *   parent: Variables | null\n   *   context: VariableContext,\n   *   value?: any,\n   *   raw?: any\n   * } } options\n   */\n  constructor({\n    name = 'Expressions',\n    tokens = [],\n    children = [],\n    parent = null,\n    context,\n    value,\n    raw\n  }) {\n    this.name = name;\n    this.tokens = tokens;\n    this.children = children;\n    this.parent = parent;\n    this.context = context;\n    this.value = value;\n    this.raw = raw;\n  }\n\n  enterScope(name) {\n\n    const childScope = this.of({\n      name,\n      parent: this\n    });\n\n    LOG_VARS && console.log('[%s] enter', childScope.path, childScope.context);\n\n    return childScope;\n  }\n\n  exitScope(str) {\n\n    if (!this.parent) {\n      LOG_VARS && console.log('[%s] NO exit %o\\n%s', this.path, this.context, indent(str, '  '));\n\n      return this;\n    }\n\n    LOG_VARS && console.log('[%s] exit %o\\n%s', this.path, this.context, indent(str, '  '));\n\n    return this.parent.pushChild(this);\n  }\n\n  token(part) {\n\n    LOG_VARS && console.log('[%s] token <%s> + <%s>', this.path, this.tokens.join(' '), part);\n\n    return this.assign({\n      tokens: [ ...this.tokens, part ]\n    });\n  }\n\n  literal(value) {\n\n    LOG_VARS && console.log('[%s] literal %o', this.path, value);\n\n    return this.pushChild(this.of({\n      name: 'Literal',\n      value\n    }));\n  }\n\n  /**\n   * Return computed scope value\n   *\n   * @return {any}\n   */\n  computedValue() {\n    for (let scope = this;;scope = last(scope.children)) {\n\n      if (!scope) {\n        return null;\n      }\n\n      if (scope.value) {\n        return scope.value;\n      }\n    }\n  }\n\n  contextKeys() {\n    return this.context.getKeys().map(normalizeContextKey);\n  }\n\n  get path() {\n    return this.parent?.path?.concat(' > ', this.name) || this.name;\n  }\n\n  /**\n   * Return value of variable.\n   *\n   * @param { string } variable\n   * @return { any } value\n   */\n  get(variable) {\n\n    const names = [ variable, variable && normalizeContextKey(variable) ];\n\n    const contextKey = this.context.getKeys().find(\n      key => names.includes(normalizeContextKey(key))\n    );\n\n    if (typeof contextKey === 'undefined') {\n      return undefined;\n    }\n\n    const val = this.context.get(contextKey);\n\n    if (val instanceof ValueProducer) {\n      return val.get(this);\n    } else {\n      return val;\n    }\n  }\n\n  resolveName() {\n\n    const variable = this.tokens.join(' ');\n    const tokens = [];\n\n    const parentScope = this.assign({\n      tokens\n    });\n\n    const variableScope = this.of({\n      name: 'VariableName',\n      parent: parentScope,\n      value: this.get(variable),\n      raw: variable\n    });\n\n    LOG_VARS && console.log('[%s] resolve name <%s=%s>', variableScope.path, variable, this.get(variable));\n\n    return parentScope.pushChild(variableScope);\n  }\n\n  pushChild(child) {\n\n    if (!child) {\n      return this;\n    }\n\n    const parent = this.assign({\n      children: [ ...this.children, child ]\n    });\n\n    child.parent = parent;\n\n    return parent;\n  }\n\n  pushChildren(children) {\n\n    /**\n     * @type {Variables}\n     */\n    let parent = this;\n\n    for (const child of children) {\n      parent = parent.pushChild(child);\n    }\n\n    return parent;\n  }\n\n  declareName() {\n\n    if (this.tokens.length === 0) {\n      throw Error('no tokens to declare name');\n    }\n\n    const variableName = this.tokens.join(' ');\n\n    LOG_VARS && console.log('[%s] declareName <%s>', this.path, variableName);\n\n    return this.assign({\n      tokens: []\n    }).pushChild(\n      this.of({\n        name: 'Name',\n        value: variableName\n      })\n    );\n  }\n\n  define(name, value) {\n\n    if (typeof name !== 'string') {\n      LOG_VARS && console.log('[%s] no define <%s=%s>', this.path, name, value);\n\n      return this;\n    }\n\n    LOG_VARS && console.log('[%s] define <%s=%s>', this.path, name, value);\n\n    const context = this.context.set(name, value);\n\n    return this.assign({\n      context\n    });\n  }\n\n  /**\n   * @param { Record<string, any> } [options]\n   *\n   * @return { Variables }\n   */\n  assign(options = {}) {\n\n    return Variables.of({\n      ...this,\n      ...options\n    });\n  }\n\n  /**\n   * @param { Record<string, any> } [options]\n   *\n   * @return { Variables }\n   */\n  of(options = {}) {\n\n    const defaultOptions = {\n      context: this.context,\n      parent: this.parent\n    };\n\n    return Variables.of({\n      ...defaultOptions,\n      ...options\n    });\n  }\n\n  /**\n   * @param { {\n   *   name?: string,\n   *   tokens?: string[],\n   *   children?: Variables[],\n   *   parent?: Variables | null\n   *   context: VariableContext,\n   *   value?: any,\n   *   raw?: any\n   * } } options\n   *\n   * @return {Variables}\n   */\n  static of(options) {\n\n    const {\n      name,\n      tokens = [],\n      children = [],\n      parent = null,\n      context,\n      value,\n      raw\n    } = options;\n\n    if (!context) {\n      throw new Error('must provide <context>');\n    }\n\n    return new Variables({\n      name,\n      tokens: [ ...tokens ],\n      children: [ ...children ],\n      context,\n      parent,\n      value,\n      raw\n    });\n  }\n\n}\n\n/**\n * @param { string } name\n *\n * @return { string } normalizedName\n */\nexport function normalizeContextKey(name) {\n  return name.replace(/\\s*([./\\-'+]|\\*\\*?)\\s*/g, ' $1 ').replace(/\\s{2,}/g, ' ').trim();\n}\n\n/**\n * Wrap children of variables under the given named child.\n *\n * @param { Variables } variables\n * @param { string } scopeName\n * @param { string } code\n * @return { Variables }\n */\nfunction wrap(variables, scopeName, code) {\n\n  const parts = variables.children.filter(c => c.name !== scopeName);\n  const children = variables.children.filter(c => c.name === scopeName);\n\n  const namePart = parts[0];\n  const valuePart = parts[Math.max(1, parts.length - 1)];\n\n  const name = namePart?.computedValue();\n  const value = valuePart?.computedValue() || null;\n\n  return variables\n    .assign({\n      children\n    })\n    .enterScope(scopeName)\n    .pushChildren(parts)\n    .exitScope(code)\n    .define(name, value);\n}\n\n/**\n * @param { ContextValue } [context]\n * @param { typeof VariableContext } [Context]\n *\n * @return { ContextTracker<Variables> }\n */\nexport function trackVariables(context = {}, Context = VariableContext) {\n\n  const start = Variables.of({\n    context: Context.of(context)\n  });\n\n  return new ContextTracker({\n    start,\n    reduce(variables, term, stack, input) {\n\n      if (term === IfExpression) {\n        const [ thenPart, elsePart ] = variables.children.slice(-2);\n\n        variables = variables.assign({\n          value: Context.of(\n            thenPart?.computedValue(),\n            elsePart?.computedValue()\n          )\n        });\n      }\n\n      if (term === List) {\n        variables = variables.assign({\n          value: Context.of(\n            ...variables.children.map(\n              c => c?.computedValue()\n            )\n          )\n        });\n      }\n\n      if (term === FilterExpression) {\n        const [ sourcePart, _ ] = variables.children.slice(-2);\n\n        variables = variables.assign({\n          value: sourcePart?.computedValue()\n        });\n      }\n\n      if (term === FunctionInvocation) {\n\n        const [\n          name,\n          ...args\n        ] = variables.children;\n\n        // preserve type information through `get value(context, key)` utility\n        if (name?.raw === 'get value') {\n          variables = getContextValue(variables, args);\n        }\n      }\n\n      const start = contextStarts[term];\n\n      if (start) {\n        return variables.enterScope(start);\n      }\n\n      const prefixedStart = prefixedContextStarts[term];\n\n      // pull <expression> into new <prefixedStart> context\n      if (prefixedStart) {\n\n        const {\n          children: currentChildren,\n          context: currentContext,\n        } = variables;\n\n        const children = currentChildren.slice(0, -1);\n        const lastChild = last(currentChildren);\n\n        let newContext = null;\n\n        if (term === pathExpressionStart) {\n          newContext = Context.of(lastChild?.computedValue());\n        }\n\n        if (term === filterExpressionStart) {\n          newContext = Context.of(\n            currentContext,\n            lastChild?.computedValue()\n          ).set('item', lastChild?.computedValue());\n        }\n\n        return variables\n          .assign({ children })\n          .enterScope(prefixedStart)\n          .pushChild(lastChild)\n          .assign({ context: newContext || currentContext });\n      }\n\n      // @ts-expect-error internal method\n      const code = input.read(input.pos, stack.pos);\n\n      const end = contextEnds[term];\n\n      if (end) {\n        return variables.exitScope(code);\n      }\n\n      if (term === ContextEntry) {\n        const parts = variables.children.filter(c => c.name !== 'ContextEntry');\n\n        const name = parts[0];\n        const value = last(parts);\n\n        return wrap(variables, 'ContextEntry', code).assign(\n          {\n            value: Context\n              .of(variables.value)\n              .set(name?.computedValue(), value?.computedValue())\n          }\n        );\n      }\n\n      if (\n        term === ForInExpression ||\n        term === QuantifiedInExpression\n      ) {\n        return wrap(variables, 'InExpression', code);\n      }\n\n      // define <partial> within ForExpression body\n      if (term === forExpressionBodyStart) {\n\n        return variables.define(\n          'partial',\n          ValueProducer.of(variables => {\n            return last(variables.children)?.computedValue();\n          })\n        );\n      }\n\n      if (\n        term === ParameterName\n      ) {\n        const name = last(variables.children).computedValue();\n\n        // TODO: attach type information\n        return variables.define(name, 1);\n      }\n\n      // pull <expression> into ArithmeticExpression child\n      if (\n        term === arithmeticPlusStart ||\n        term === arithmeticTimesStart ||\n        term === arithmeticExpStart\n      ) {\n        const children = variables.children.slice(0, -1);\n        const lastChild = last(variables.children);\n\n        return variables.assign({\n          children\n        }).enterScope('ArithmeticExpression').pushChild(lastChild);\n      }\n\n      if (term === arithmeticUnaryStart) {\n        return variables.enterScope('ArithmeticExpression');\n      }\n\n      if (\n        term === Identifier ||\n        term === AdditionalIdentifier ||\n        term === PropertyIdentifier\n      ) {\n        return variables.token(code);\n      }\n\n      if (\n        term === StringLiteral\n      ) {\n        return variables.literal(code.replace(/^\"|\"$/g, ''));\n      }\n\n      if (term === BooleanLiteral) {\n        return variables.literal(code === 'true' ? true : false);\n      }\n\n      if (term === NumericLiteral) {\n        return variables.literal(parseFloat(code));\n      }\n\n      if (term === nil) {\n        return variables.literal(null);\n      }\n\n      if (\n        term === VariableName\n      ) {\n        return variables.resolveName();\n      }\n\n      if (\n        term === Name ||\n        term === PropertyName\n      ) {\n        return variables.declareName();\n      }\n\n      if (\n        term === expression0 ||\n        term === PositiveUnaryTest\n      ) {\n        if (variables.tokens.length > 0) {\n          throw new Error('uncleared name');\n        }\n      }\n\n      if (term === expression0) {\n\n        let parent = variables;\n\n        while (parent.parent) {\n          parent = parent.exitScope(code);\n        }\n\n        return parent;\n      }\n\n      return variables;\n    }\n  });\n}\n\nexport const variableTracker = trackVariables({});\n\n\n// helpers //////////////\n\nfunction getContextValue(variables, args) {\n\n  if (!args.length) {\n    return variables.assign({\n      value: null\n    });\n  }\n\n  if (args[0].name === 'Name') {\n    args = extractNamedArgs(args, [ 'm', 'key' ]);\n  }\n\n  if (args.length !== 2) {\n    return variables.assign({\n      value: null\n    });\n  }\n\n  const [\n    context,\n    key\n  ] = args;\n\n  const keyValue = key?.computedValue();\n  const contextValue = context?.computedValue();\n\n  if (\n    (!contextValue || typeof contextValue !== 'object') || typeof keyValue !== 'string'\n  ) {\n    return variables.assign({\n      value: null\n    });\n  }\n\n  return variables.assign({\n    value: [ normalizeContextKey(keyValue), keyValue ].reduce((value, keyValue) => {\n      return contextValue.get(keyValue) || value;\n    }, null)\n  });\n}\n\nfunction extractNamedArgs(args, argNames) {\n\n  const context = {};\n\n  for (let i = 0; i < args.length; i += 2) {\n    const [ name, value ] = args.slice(i, i + 2);\n\n    context[name.value] = value;\n  }\n\n  return argNames.map(name => context[name]);\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}","import { styleTags, tags as t } from '@lezer/highlight';\n\nexport const feelHighlighting = styleTags({\n  StringLiteral: t.string,\n  NumericLiteral: t.number,\n  BooleanLiteral: t.bool,\n  'AtLiteral!': t.special(t.string),\n  CompareOp: t.compareOperator,\n  ArithOp: t.arithmeticOperator,\n  'for if then else some every satisfies between return': t.controlKeyword,\n  'in instance of and or': t.operatorKeyword,\n  function: t.definitionKeyword,\n  as: t.keyword,\n  'Type/...': t.typeName,\n  Wildcard: t.special(t.variableName),\n  null: t.null,\n  LineComment: t.lineComment,\n  BlockComment: t.blockComment,\n  'VariableName! \"?\"': t.variableName,\n  'DateTimeConstructor! SpecialFunctionName!': t.function(t.special(t.variableName)),\n  'List Interval': t.list,\n  Context: t.definition(t.literal),\n  'Name!': t.definition(t.variableName),\n  'Key/Name! ContextEntryType/Name!': t.definition(t.propertyName),\n  'PathExpression/VariableName!': t.function(t.propertyName),\n  'FormalParameter/ParameterName!': t.function(t.definition(t.variableName)),\n  '( )': t.paren,\n  '[ ]': t.squareBracket,\n  '{ }': t.brace,\n  '.': t.derefOperator,\n  ', ;': t.separator,\n  '..': t.punctuation\n});","// This file was generated by lezer-generator. You probably shouldn't edit it.\nimport {LRParser} from \"@lezer/lr\"\nimport {propertyIdentifiers, identifiers, insertSemicolon, variableTracker} from \"./tokens.js\"\nimport {feelHighlighting} from \"./highlight.js\"\nconst spec_identifier = {__proto__:null,for:10, in:32, return:36, if:40, then:42, else:44, some:48, every:50, satisfies:56, or:60, and:64, between:72, instance:86, of:89, days:101, time:103, duration:105, years:107, months:109, date:111, list:117, context:123, function:130, null:156, true:330, false:330, \"?\":170, external:186, not:211}\nexport const parser = LRParser.deserialize({\n  version: 14,\n  states: \"C|O`QYOOO`QYOOO$mQYOOOOQU'#Ce'#CeO$wQYO'#C`O&QQYO'#FQOOQQ'#Ff'#FfO&[QYO'#FfO`QYO'#DVOOQU'#En'#EnO'{Q^O'#D]OOQU'#D^'#D^OOQU'#D]'#D]OOQO'#Fn'#FnO)xQWO'#DvOOQQ'#D}'#D}OOQQ'#EO'#EOOOQQ'#EP'#EPO)}OWO'#ESO)xQWO'#EQOOQQ'#EQ'#EQOOQQ'#Ft'#FtOOQQ'#Fr'#FrOOQQ'#Fy'#FyOOQQ'#EU'#EUO`QYO'#EWOOQQ'#FS'#FSO*SQ^O'#FSO+yQYO'#EXO,QQWO'#EYOOQP'#F}'#F}O,VQXO'#EaOOQQ'#Fz'#FzOOQQ'#FR'#FRQOQWOOOOQQ'#FT'#FTOOQQ'#F^'#F^O`QYO'#CoOOQQ'#F_'#F_O$wQYO'#CsO,bQYO'#DwOOQQ'#Fs'#FsO,gQYO'#EROOQO'#ER'#ERO`QYO'#EVO`QYO'#EUOOQO'#F{'#F{Q,oQWOOO,tQYO'#DRO-kQWO'#FbOOQO'#DT'#DTO-vQYO'#FfO-}QWOOO.tQYO'#CdO/RQYO'#FVOOQQ'#Cc'#CcO/WQYO'#FUOOQQ'#Cb'#CbO/`QYO,58zO`QYO,59iOOQQ'#Fc'#FcOOQQ'#Fd'#FdOOQQ'#Fe'#FeO`QYO,59qO`QYO,59qO`QYO,59qOOQQ'#Fl'#FlO/eQYO,5:^OOQQ'#Fm'#FmO`QYO,5:`O`QYO,59eO`QYO,59gO`QYO,59iO1^QYO,59iO1eQYO,59rOOQQ,5:i,5:iO1jQYO,59qOOQU-E8l-E8lO3^QYO'#FoOOQQ,5:b,5:bOOQQ,5:n,5:nOOQQ,5:l,5:lO3eQYO,5:rOOQQ,5;n,5;nO3oQYO,5:qO3|QWO,5:sO4RQYO,5:tOOQP'#Ee'#EeO4xQXO'#EdOOQO'#Ec'#EcO5PQWO'#EbO5UQWO'#GOO5^QWO,5:{O5cQYO,59ZO/RQYO'#FaOOQQ'#Cw'#CwO5jQYO'#F`OOQQ'#Cv'#CvO5rQYO,59_O5wQYO,5:cO5|QYO,5:mO3hQYO,5:qO6RQYO,5:pO`QYO'#EwQ,oQWOOO`QYO'#EmO6xQWO,5;|O`QYOOOOQR'#Cf'#CfOOQQ'#Ej'#EjO7rQYO,59OO`QYO,5;qOOQQ'#FY'#FYO$wQYO'#EkO8SQYO,5;pO`QYO1G.fOOQQ'#F]'#F]O8yQYO1G/TO;pQYO1G/]O;zQYO1G/]O<UQYO1G/]OOQQ1G/x1G/xO=xQYO1G/zO>PQYO1G/PO?YQYO1G/RO@cQYO1G/TO`QYO1G/TOOQQ1G/T1G/TO@yQYO1G/^OAhQ^O'#CdOBzQYO'#FqOOQO'#Dz'#DzOCUQWO'#DyOCZQWO'#FpOOQO'#Dx'#DxOOQO'#D{'#D{OCcQWO,5<ZOOQQ1G0^1G0^O`QYO1G0]O`QYO'#EsOChQWO,5<]OOQQ1G0_1G0_OCsQWO'#E[ODOQWO'#F|OOQO'#EZ'#EZODWQWO1G0`OOQP'#Eu'#EuOD]QXO,5;OO`QYO,5:|ODdQXO'#EvODlQWO,5<jOOQQ1G0g1G0gO`QYO1G.uO`QYO,5;{O$wQYO'#ElODtQYO,5;zO`QYO1G.yOD|QYO1G/}OOQO1G0X1G0XOOQO,5;c,5;cOOQO-E8u-E8uOOQO,5;X,5;XOOQO-E8k-E8kOERQWOOOOQQ-E8h-E8hOEWQYO'#CmOOQQ1G1]1G1]OOQQ,5;V,5;VOOQQ-E8i-E8iOEeQYO7+$QOOQQ7+%f7+%fO`QYO7+$oOF[QYO,5:rOFiQWO7+$oOFnQYO'#D[OOQQ'#DZ'#DZOHbQYO'#D_OHgQYO'#D_OHlQYO'#D_OHqQ`O'#DgOHvQ`O'#DjOH{Q`O'#DnOOQQ7+$x7+$xO`QYO,5:eO$wQYO'#ErOIQQWO,5<[OOQQ1G1u1G1uOJWQYO7+%wOJeQYO,5;_OOQO-E8q-E8qO@yQYO,5:vO$wQYO'#EtOJrQWO,5<hOJzQYO7+%zOOQP-E8s-E8sOKRQYO1G0hOOQO,5;b,5;bOOQO-E8t-E8tOK]QYO7+$aOKdQYO1G1gOOQQ,5;W,5;WOOQQ-E8j-E8jOKnQYO7+$eOOQO7+%i7+%iO`QYO,59XOLeQYO<<HZOOQQ<<HZ<<HZO/eQYO'#EoOMnQYO,59vO! bQYO,59yO! gQYO,59yO! lQYO,59yO! qQYO,5:RO$wQYO,5:UO!!`QbO,5:YO!!gQYO1G0POOQO,5;^,5;^OOQO-E8p-E8pO!!qQYO<<IcOOQQ<<Ic<<IcOOQO1G0b1G0bOOQO,5;`,5;`OOQO-E8r-E8rO!%pQYO'#E^OOQQ<<If<<IfO`QYO<<IfO`QYO<<G{O!&gQYO1G.sOOQQ,5;Z,5;ZOOQQ-E8m-E8mO!&qQYO1G/eOOQQ1G/e1G/eO!&vQbO'#D]O!'XQ`O'#D[O!'dQ`O1G/mO!'iQWO'#DmO!'nQ`O'#FhOOQO'#Dl'#DlO!'vQ`O1G/pOOQO'#Dq'#DqO!'{Q`O'#FjOOQO'#Dp'#DpO!(TQ`O1G/tOOQQAN?QAN?QO!(YQYOAN=gOOQQ7+%P7+%PO!)PQ`O,59vOOQQ7+%X7+%XO! qQYO,5:XO$wQYO'#EpO!)[Q`O,5<SOOQQ7+%[7+%[O! qQYO'#EqO!)dQ`O,5<UO!)lQ`O7+%`OOQO1G/s1G/sOOQO,5;[,5;[OOQO-E8n-E8nOOQO,5;],5;]OOQO-E8o-E8oO@yQYO<<HzOOQQAN>fAN>fO/eQYO'#EoO! qQYO<<HzO!)qQ`O7+%`O!)vQ`O1G/tO!!`QbO,5:YO!){Q`O'#Dn\",\n  stateData: \"!*[~O#rOS#sOSPOSQOS~OTsOZVO[UOdtOhvOivOs}OviO!T{O!U{O!VxO!XzO!c!OO!g|O!igO!pyO!wjO#SnO#nRO#oRO$ZZO$i_O$j`O$kaO$lbO~OTsO[UOdtOhvOivOs}OviO!T{O!U{O!VxO!XzO!c!OO!g|O!igO!pyO!wjO#SnO#nRO#oRO$ZZO$i_O$j`O$kaO$lbO~OZ!TO#]!UO~P#PO#nRO#oRO~OZ!^O[!^O]!_O^!_O_!`O`!kOn!hOp!iOr!]Os!]Ot!jO{!lO!i!fO#z!dOv$bX~O#l#tX$s#tX~P%PO$i!mOT$YXZ$YX[$YXd$YXh$YXi$YXs$YXv$YX!T$YX!U$YX!V$YX!X$YX!c$YX!g$YX!i$YX!p$YX!w$YX#S$YX#n$YX#o$YX$Z$YX$j$YX$k$YX$l$YX~O#nRO#oROZ!PX[!PX]!PX^!PX_!PX`!PXn!PXp!PXr!PXs!PXt!PXv!PX{!PX!i!PX#l!PX#p!PX#z!PX$s!PX$O!PXx!PX#}!PX!g!PXe!PXb!PX#R!PXf!PXl!PX~Ov!pO~O$j`O~O#p!uOZ#vX[#vX]#vX^#vX_#vX`#vXn#vXp#vXr#vXs#vXt#vXv#vX{#vX!i#vX#l#vX#z#vX$s#vX$O#vXx#vX#}#vX!g#vXe#vXb#vX#R#vXf#vXl#vX~O!g$eP~P`Ov!xO~O#m!yO$j`O#R$rP~Op#VO~Op#WOv!uX~O$s#ZO~O#luX$OuX$suXxuX#}uX!guXeuXbuX#RuXfuXluX~P%PO$O#]O#l$UXx$UX~O#l#[X~P&[Ov#_O~OZ#`O[#`O]#`O^#`O_#`O#nRO#oRO#z#`O#{#`O$]WX~O`WXxWX$OWX~P.SO`#dO~O$O#eOb#xX~Ob#hO~O#nRO#oRO$ZZO~OTsOZVO[UOdtOhvOivOs}O!T{O!U{O!VxO!XzO!c!OO!g|O!igO!pyO!wjO#SnO#nRO#oRO$ZZO$i_O$j`O$kaO$lbO~Ov#rO~P/pO|#tO~O{!lO!i!fO#z!dOZya[ya]ya^ya_ya`yanyapyaryasyatyav$bX#lya$sya$Oyaxya#}ya!gyaeyabya#Ryafyalya~Ox$eP~P`Ox#}O#}$OO~P%PO#}$OO$O$PO!g$eX~P%PO!g$RO~O#nRO#oROx$pP~OZ#`O[#`O]#`O^#`O_#`O#m!yO#z#`O#{#`O~O$]#WX~P4^O$]$YO~O$O$ZO#R$rX~O#R$]O~Oe$^O~P%PO$O$`Ol$SX~Ol$bO~O!W$cO~O!T$dO~O#l!xa$s!xa$O!xax!xa#}!xa!g!xae!xab!xa#R!xaf!xal!xa~P%PO$O#]O#l$Uax$Ua~OZ#`O[#`O]#`O^#`O_#`O#nRO#oRO#z#`O#{#`O~O`Wa$]WaxWa$OWa~P7TO$O#eOb#xa~OZ!^O[!^O]!_O^!_O_!`O{!lO!i!fO#z!dOv$bX~O`qinqipqirqisqitqi#lqi$sqi$Oqixqi#}qi!gqieqibqi#Rqifqilqi~P8[O_!`O{!lO!i!fO#z!dOZyi[yi`yinyipyiryisyityiv$bX#lyi$syi$Oyixyi#}yi!gyieyibyi#Ryifyilyi~O]!_O^!_O~P:SO]yi^yi~P:SO{!lO!i!fO#z!dOZyi[yi]yi^yi_yi`yinyipyiryisyityiv$bX#lyi$syi$Oyixyi#}yi!gyieyibyi#Ryifyilyi~O!g$pO~P%PO`!kOp!iOr!]Os!]Ot!jOnmi#lmi$smi$Omixmi#}mi!gmiemibmi#Rmifmilmi~P8[O`!kOr!]Os!]Ot!jOnoipoi#loi$soi$Ooixoi#}oi!goieoiboi#Roifoiloi~P8[O`!kOn!hOp$qOr!]Os!]Ot!jO~P8[O!S$vO!V$wO!X$xO![$yO!_$zO!c${O#nRO#oRO$ZZO~OZ#bX[#bX]#bX^#bX_#bX`#bXn#bXp#bXr#bXs#bXt#bXv#bXx#bX{#bX!i#bX#n#bX#o#bX#p#bX#z#bX$O#bX~P.SO$O$POx$eX~P%PO$]$}O~O$O%OOx$dX~Ox%QO~O$O$PO!g$eax$ea~O$]%UOx#OX$O#OX~O$O%VOx$pX~Ox%XO~O$]#Wa~P4^O#m!yO$j`O~O$O$ZO#R$ra~O$O$`Ol$Sa~O!U%cO~OxrO~O#}%dObaX$OaX~P%PO#lSq$sSq$OSqxSq#}Sq!gSqeSqbSq#RSqfSqlSq~P%POx#}O#}$OO$OuX~P%POx%fO~O#z%gOZ!OX[!OX]!OX^!OX_!OX`!OXn!OXp!OXr!OXs!OXt!OXv!OX{!OX!i!OX#l!OX$s!OX$O!OXx!OX#}!OX!g!OXe!OXb!OX#R!OXf!OXl!OX~Op%iO~Op%jO~Op%kO~O!]%lO~O!]%mO~O!]%nO~O$O%OOx$da~OZ!^O[!^O]!_O^!_O_!`O`!kOn!hOp!iOr!]Os!]Ot!jO{!lO#z!dOv$bX~Ox%sO!g%sO!i%rO~PIYO!g#ga$O#gax#ga~P%PO$O%VOx$pa~O#P%yO~P`O#R#Ui$O#Ui~P%POf%zO~P%POl$Ti$O$Ti~P%PO#lgq$sgq$Ogqxgq#}gq!ggqegqbgq#Rgqfgqlgq~P%PO`qynqypqyrqysqytqy#lqy$sqy$Oqyxqy#}qy!gqyeqybqy#Rqyfqylqy~P8[O#z%gOZ!Oa[!Oa]!Oa^!Oa_!Oa`!Oan!Oap!Oar!Oas!Oat!Oav!Oa{!Oa!i!Oa#l!Oa$s!Oa$O!Oax!Oa#}!Oa!g!Oae!Oab!Oa#R!Oaf!Oal!Oa~O!T&OO~O!W&OO~O!T&PO~O!S$vO!V$wO!X$xO![$yO!_$zO!c&uO#nRO#oRO$ZZO~O!Y$^P~P! qOx!mi$O!mi~P%POT$aXZ$aX[$aX]!yy^!yy_!yy`!yyd$aXh$aXi$aXn!yyp!yyr!yys$aXt!yyv$aX{!yy!T$aX!U$aX!V$aX!X$aX!c$aX!g$aX!i$aX!p$aX!w$aX#S$aX#l!yy#n$aX#o$aX#z!yy$Z$aX$i$aX$j$aX$k$aX$l$aX$s!yy$O!yyx!yy#}!yye!yyb!yy#R!yyf!yyl!yy~O#l#QX$s#QX$O#QXx#QX#}#QX!g#QXe#QXb#QX#R#QXf#QXl#QX~P%PObai$Oai~P%PO!U&_O~O#nRO#oRO!Y!PX#z!PX$O!PX~O#z&pO!Y!OX$O!OX~O!Y&aO~O$]&bO~O$O&cO!Y$[X~O!Y&eO~O$O&fO!Y$^X~O!Y&hO~O#lc!R$sc!R$Oc!Rxc!R#}c!R!gc!Rec!Rbc!R#Rc!Rfc!Rlc!R~P%PO#z&pO!Y!Oa$O!Oa~O$O&cO!Y$[a~O$O&fO!Y$^a~O$_&nO~O$_&qO~O!Y&rO~O!]&tO~O$Z~QP_^$i]#z~\",\n  goto: \"E|$sPPPP$tP%m%p%v&Y'sPPPPPP'|P$tPPP$tPP(P(SP$tP$tP$tPPP(YP(eP$t$tPP(n)T)`*m)TPPPPPPP)TPP)TP+r+u)TP+{,R$tP$tP$t,Y-R-U-[-RP-d.]-d-d/]0UP$t0}$t1v1v2o2rP2xPP1v3O3U/X3YPP3bP3e3l3r3x4O5Z5e5k5q5w6O6U6[6bPPPPPPPP6h6q8x9q:j:mPP:qPP:w:z;s<l<o<s<x=g>V>vP?oP?rP?v@iA[BTBZB^$tBdBdPPPPC]8xDUD}EQEy!mjOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR![SQ!YSR$m#eS!WS#eS#Qw$`W#w!p!x%O%VT&T%m&c#WXOPQWYilu|}!]!a!b!c!e!g!h!i!j!k#Z#]#_#c#g#r#t$O$P$Y$^$_$b$q$}%U%X%d%g%l%n%y%z&Q&b&f&n&p&q&tb!VSw!x#e$`%O%V%m&cU#a!V#b#uR#u!pU#a!V#b#uT$W!z$XR$l#cR#UwQ#SwR%`$`U!RQ#_#rQ#s!kR$g#]QrQQ$i#_R$s#rQ$|#tQ%t%UQ&S%lU&X%n&f&tQ&i&bT&o&n&qc$u#t%U%l%n&b&f&n&q&t!lkOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zQ#m!eU$t#t%U&nS%|%g&p]&R%l%n&b&f&q&t#V[OPQWilu|}!]!a!b!c!e!g!h!i!j!k!p#Z#]#_#c#g#r#t$O$P$Y$^$_$b$q$}%U%X%d%g%l%n%y%z&b&f&n&p&q&tR&W%mQ&U%mR&j&cQ&[%nR&s&tS&Y%n&tR&l&f!m]OPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR#|!pQ#y!pR%p%OS#x!p%OT$S!x%V!meOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!leOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zQ!rbT!{o$Z!mcOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mdOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mhOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mpOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR$V!xQ$T!xR%u%VQ%x%XR&]%yQ!}oR%[$ZT!|o$ZS!zo$ZT$W!z$XRrQS#b!V#uR$j#bQ#f!YR$n#fQ$a#SR%a$aQ#^!RR$h#^!vYOPQWilu|}!]!a!b!c!e!g!h!i!j!k!p#Z#]#_#c#g#r#t$O$P$Y$^$_$b$q$}%U%X%d%g%y%z&nS!oY&Q_&Q%l%n&b&f&p&q&tQ%h$tS%}%h&`R&`&RQ&d&UR&k&dQ&g&YR&m&gQ%P#yR%q%PS$Q!v#vR%T$QQ%W$TR%v%WQ$X!zR%Y$XQ$[!}R%]$[Q#[!PR$f#[QrOQ!PPR$e#ZUTOP#ZW!QQ!k#]#_Q!nWQ!tiQ!vlQ#PuQ#X|Q#Y}Q#i!]Q#j!aQ#k!bQ#l!cQ#n!gQ#o!hQ#p!iQ#q!jQ#v!pQ$k#cQ$o#gQ$r#rQ%R$OQ%S$PQ%Z$YQ%^$^Q%_$_Q%b$bQ%e$qQ%o$}S%w%X%yQ%{%dR&^%z!mqOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mSOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR!ZST!XS#eQ#c!WR$_#QR#g![!muOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mwOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR#TwT#Rw$`V!SQ#_#r!X!aT!Q!t!v#P#X#Y#i#n#o#p#q#v$k$o$r%R%S%Z%^%_%b%e%o%w%{&^!Z!bT!Q!t!v#P#X#Y#i#j#n#o#p#q#v$k$o$r%R%S%Z%^%_%b%e%o%w%{&^!]!cT!Q!t!v#P#X#Y#i#j#k#n#o#p#q#v$k$o$r%R%S%Z%^%_%b%e%o%w%{&^!mWOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR&V%mT&Z%n&t!a!eT!Q!n!t!v#P#X#Y#i#j#k#l#n#o#p#q#v$k$o$r%R%S%Z%^%_%b%e%o%w%{&^!a!gT!Q!n!t!v#P#X#Y#i#j#k#l#n#o#p#q#v$k$o$r%R%S%Z%^%_%b%e%o%w%{&^!m^OPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zQ!q^R!scR#z!pQ!wlR#{!p!mfOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mlOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%z!mmOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR$U!x!moOPQWilu|}!]!a!b!c!g!h!i!j!k!p#Z#]#_#c#g#r$O$P$Y$^$_$b$q$}%X%d%y%zR#Oo\",\n  nodeNames: \"⚠ LineComment BlockComment Expression ForExpression for InExpressions InExpression Name Identifier Identifier ArithOp ArithOp ArithOp ArithOp ArithOp in IterationContext return IfExpression if then else QuantifiedExpression some every InExpressions InExpression satisfies Disjunction or Conjunction and Comparison CompareOp CompareOp between PositiveUnaryTest ( PositiveUnaryTests ) ArithmeticExpression InstanceOfExpression instance of Type QualifiedName VariableName BacktickIdentifier SpecialType days time duration years months date > ListType list < ContextType context ContextEntryTypes ContextEntryType FunctionType function ArgumentTypes ArgumentType PathExpression ] FilterExpression [ FunctionInvocation SpecialFunctionName NamedParameters NamedParameter ParameterName PositionalParameters null NumericLiteral StringLiteral BooleanLiteral DateTimeLiteral DateTimeConstructor AtLiteral ? SimplePositiveUnaryTest Interval ParenthesizedExpression List FunctionDefinition FormalParameters FormalParameter external FunctionBody } { Context ContextEntry Key Name Identifier Expressions UnaryTests Wildcard not\",\n  maxTerm: 173,\n  context: variableTracker,\n  nodeProps: [\n    [\"closedBy\", 38,\")\",71,\"]\",96,\"}\"],\n    [\"openedBy\", 40,\"(\",69,\"[\",95,\"{\"],\n    [\"group\", -5,78,79,80,81,82,\"Literal\"]\n  ],\n  propSources: [feelHighlighting],\n  skippedNodes: [0,1,2],\n  repeatNodeCount: 14,\n  tokenData: \"-c~RvXY#iYZ$^Z[#i]^$^pq#iqr$crs$nwx&fxy&kyz&pz{&u{|'S|}'X}!O'^!O!P'k!P!Q(T!Q![*O![!]*a!]!^*f!^!_*k!_!`$i!`!a*z!b!c+U!}#O+Z#P#Q+`#Q#R&}#S#T+e#o#p-X#q#r-^$f$g#i#BY#BZ#i$IS$I_#i$I|$I}$^$I}$JO$^$JT$JU#i$KV$KW#i&FU&FV#i?HT?HU#i~#nY#r~XY#iZ[#ipq#i$f$g#i#BY#BZ#i$IS$I_#i$JT$JU#i$KV$KW#i&FU&FV#i?HT?HU#i~$cO#s~~$fP!_!`$i~$nOr~~$sW$j~OY$nZr$nrs%]s#O$n#O#P%b#P;'S$n;'S;=`&`<%lO$n~%bO$j~~%eRO;'S$n;'S;=`%n;=`O$n~%sX$j~OY$nZr$nrs%]s#O$n#O#P%b#P;'S$n;'S;=`&`;=`<%l$n<%lO$n~&cP;=`<%l$n~&kO#{~~&pOv~~&uOx~~&zP^~z{&}~'SO_~~'XO[~~'^O$O~R'cPZP!`!a'fQ'kO$_Q~'pQ#z~!O!P'v!Q!['{~'{O#}~~(QP$i~!Q!['{~(YQ]~z{(`!P!Q)g~(cTOz(`z{(r{;'S(`;'S;=`)a<%lO(`~(uVOz(`z{(r{!P(`!P!Q)[!Q;'S(`;'S;=`)a<%lO(`~)aOQ~~)dP;=`<%l(`~)lSP~OY)gZ;'S)g;'S;=`)x<%lO)g~){P;=`<%l)g~*TQ$i~!O!P*Z!Q![*O~*^P!Q!['{~*fO$]~~*kO$s~R*rP!]QsP!_!`*uP*zOsPR+RP!YQsP!_!`*u~+ZO$l~~+`O!i~~+eO!g~~+hWOY+eZ#O+e#O#P,Q#P#S+e#S#T,|#T;'S+e;'S;=`-R<%lO+e~,TRO;'S+e;'S;=`,^;=`O+e~,aXOY+eZ#O+e#O#P,Q#P#S+e#S#T,|#T;'S+e;'S;=`-R;=`<%l+e<%lO+e~-RO$Z~~-UP;=`<%l+e~-^O#S~~-cO#R~\",\n  tokenizers: [propertyIdentifiers, identifiers, insertSemicolon, 0, 1],\n  topRules: {\"Expression\":[0,3],\"Expressions\":[1,102],\"UnaryTests\":[2,103]},\n  dialects: {camunda: 2532},\n  dynamicPrecedences: {\"31\":-1,\"68\":1,\"72\":-1,\"74\":-1},\n  specialized: [{term: 122, get: (value) => spec_identifier[value] || -1}],\n  tokenPrec: 2534\n})\n"],"names":["t"],"mappings":"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"}